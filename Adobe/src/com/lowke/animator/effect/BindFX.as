////  BindFX v 1.0 - animator package//  Russell Lowke, August 19th 2008////  Copyright (c) 2008 Lowke Media//  see http://www.lowkemedia.com for more information//  see http://code.google.com/p/lowke-animator/ for code repository////  Permission is hereby granted, free of charge, to any person obtaining a //  copy of this software and associated documentation files (the "Software"), //  to deal in the Software without restriction, including without limitation //  the rights to use, copy, modify, merge, publish, distribute, sublicense, //  and/or sell copies of the Software, and to permit persons to whom the //  Software is furnished to do so, subject to the following conditions:// //  The above copyright notice and this permission notice shall be included in //  all copies or substantial portions of the Software.// //  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR //  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, //  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE //  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER //  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING //  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  //  DEALINGS IN THE SOFTWARE. ////package com.lowke.animator.effect{    import com.lowke.animator.Animator;        import flash.display.DisplayObject;    import flash.events.Event;        public class BindFX extends AnimatorEffect implements IAnimatorEffect     {           private var _dObj:DisplayObject;            // _target cast as a display object        private var _bindSource:DisplayObject;      // DisplayObject this _anime is bound to        private var _bindX:Boolean;                 // if true then x axis is bound        private var _bindY:Boolean;                 // if true then y axis is bound        private var _xOffset:Number;                // modification to x axis binding        private var _yOffset:Number;                // modification to y axis binding                // accessing an external static references, such as Animator, has an overhead,        //  so, for performance sake, external vars are substituted with local references        public static const TYPE_PERSIST:uint       = Animator.TYPE_PERSIST;        public static const PRECEDENCE_FIRST:int    = Animator.PRECEDENCE_FIRST;        public static const INTERVAL_NONE:uint      = Animator.INTERVAL_NONE;                public function BindFX(bindSource:DisplayObject,                               bindX:Boolean = true,                               bindY:Boolean = true,                               xOffset:Number = 0,                               yOffset:Number = 0)         {               super("BindFX", TYPE_PERSIST, PRECEDENCE_FIRST, INTERVAL_NONE);                        _bindSource = bindSource;            _bindX = bindX;            _bindY = bindY;            _xOffset = xOffset;            _yOffset = yOffset;                    }                public override function activate():void         {            _dObj = _target as DisplayObject;            _bindSource.addEventListener(Event.ENTER_FRAME, bind, false, 0, true);            bind();        }                        private function bind(evt:Event = null):void         {            if (_bindX)             {                _dObj.x = _bindSource.x + _xOffset;            }                        if (_bindY)             {                _dObj.y = _bindSource.y + _yOffset;            }        }                public override function cleanup():void         {            _bindSource.removeEventListener(Event.ENTER_FRAME, bind);        }                public function get xOffset():Number { return _xOffset; }        public function get yOffset():Number { return _yOffset; }        public function set xOffset(val:Number):void { _xOffset = val; }        public function set yOffset(val:Number):void { _yOffset = val; }            }}