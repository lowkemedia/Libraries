////  CollisionEvent v 1.2 - animator package//  Russell Lowke, April 15th 2008////  Copyright (c) 2008 Lowke Media//  see http://www.lowkemedia.com for more information//  see http://code.google.com/p/lowke-animator/ for code repository////  Permission is hereby granted, free of charge, to any person obtaining a //  copy of this software and associated documentation files (the "Software"), //  to deal in the Software without restriction, including without limitation //  the rights to use, copy, modify, merge, publish, distribute, sublicense, //  and/or sell copies of the Software, and to permit persons to whom the //  Software is furnished to do so, subject to the following conditions:// //  The above copyright notice and this permission notice shall be included in //  all copies or substantial portions of the Software.// //  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR //  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, //  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE //  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER //  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING //  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  //  DEALINGS IN THE SOFTWARE. ////package com.lowke.animator.event{    import flash.events.Event;        public class CollisionEvent extends Event     {           // event name        public static const COLLISION_EVENT:String = "animatorCollisionEvent";                private var _src:uint;      // source of collision, who detected it.        private var _trg:uint;      // target of collision. with what.        private var _label:String;  // label of collision occurring.                public function CollisionEvent(source:uint, target:uint, label:String)         {            super(COLLISION_EVENT);            _src = source;            _trg = target;            _label = label;        }                public override function toString():String         {             return formatToString("CollisionEvent", "type", "bubbles", "cancelable", "eventPhase",                 "src", "trg", "label");         }                public override function clone():Event         {            return new CollisionEvent(_src, _trg, _label);        }                public function get src():Number { return _src; }        public function get trg():Number { return _trg; }        public function get label():String  { return _label; }    }}